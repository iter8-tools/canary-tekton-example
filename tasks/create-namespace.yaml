apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create-namespace-task
spec:
  inputs:
    params:
      - name: namespace
        type: string
        description: namespace
        default: default
      - name: serviceaccount
        type: string
        description: name of serviceaccount
        default: default
      - name: docker-secret
        type: string
        description: name of secret for dockerhub
        default: dockerhub
  steps:
    - name: create-namespace
      image: kalantar/yq-kubernetes
      command: [ "/bin/bash" ]
      args: 
        - '-c'
        - |
          kubectl apply --filename - <<EOF
          apiVersion: v1
          kind: Namespace
          metadata:
            name: $(inputs.params.namespace)
            labels:
              istio-injection: enabled
          EOF
    - name: create-secrets
      image: kalantar/yq-kubernetes
      command: [ "/bin/bash" ]
      args:
        - '-c'
        - |
          kubectl --namespace $(inputs.params.namespace) apply --filename - <<EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: dockerhub
            annotations:
              tekton.dev/docker-0: https://index.docker.io
          type: kubernetes.io/basic-auth
          stringData:
            username: $(kubectl --namespace default get secrets/dockerhub -o jsonpath='{.data.username}' | base64 --decode)
            password: $(kubectl --namespace default get secrets/dockerhub -o jsonpath='{.data.password}' | base64 --decode)
          EOF
    - name: patch-sa
      image: lachlanevenson/k8s-kubectl
      command: [ "kubectl" ]
      args: 
        - patch
        - --namespace
        - $(inputs.params.namespace)
        - serviceaccount
        - default
        - --patch
        - '{"secrets": [{"name": "$(inputs.params.docker-secret)"}]}'
    - name: create-crb
      image: kalantar/yq-kubernetes
      command: [ "/bin/bash" ]
      args:
        - '-c'
        - |
          kubectl --namespace $(inputs.params.namespace) apply --filename - <<EOF
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: tekton-$(inputs.params.namespace)
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: tekton-iter8-role
          subjects:
            - kind: ServiceAccount
              name: $(inputs.params.serviceaccount)
              namespace: $(inputs.params.namespace)
          EOF
