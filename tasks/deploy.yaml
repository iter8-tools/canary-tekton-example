apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-task
spec:
  inputs:
    resources:
      - name: git-source
        type: git
      - name: docker-image
        type: image
    params:
      - name: image-tag
        description: tag of image to deploy
        default: latest
      - name: target-namespace
        description: target namespace for deployment
        default: default
      - name: PATCH_FILE
        default: /workspace/git-source/kustomize/patch.yaml
      - name: DEPLOYMENT_FILE
        default: /workspace/deploy.yaml
  steps:
    - name: modify-patch
      image: alpine
      command: [ "/bin/sh" ]
      args:
        - '-c'
        - |
          IMAGE_TAG=$(inputs.params.image-tag)
          PATCH_FILE=$(inputs.params.PATCH_FILE)
          #PIPELINE_IMAGE_URL=$(inputs.resources.docker-image.url):$(inputs.params.image-tag)
          PIPELINE_IMAGE_URL=$(inputs.resources.docker-image.url)

          sed -i -e "s#iter8/reviews:istio-VERSION#${PIPELINE_IMAGE_URL}#" ${PATCH_FILE}
          sed -i -e "s#VERSION#${IMAGE_TAG}#g" ${PATCH_FILE}
          cat ${PATCH_FILE}
    - name: generate-deployment
      image: tommeulensteen/kustomize
      command: [ "kustomize" ]
      args: [ "build", "/workspace/git-source/kustomize", "-o", "$(inputs.params.DEPLOYMENT_FILE)" ]
    - name: log-deployment
      image: alpine
      command: [ "cat" ]
      args: [ "$(inputs.params.DEPLOYMENT_FILE)" ]
    - name: kubectl-apply
      image: lachlanevenson/k8s-kubectl
      command: [ "kubectl" ]
      args: [ "-n", "$(inputs.params.target-namespace)", "apply", "-f", "$(inputs.params.DEPLOYMENT_FILE)" ]
